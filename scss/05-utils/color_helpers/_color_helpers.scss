.greyscale {
  -webkit-filter: grayscale(1);
  filter: grayscale(1);
}
.greyscale-75 {
  -webkit-filter: grayscale(75%);
  filter: grayscale(75%);

}
.greyscale-50 {
  -webkit-filter: grayscale(50%);
  filter: grayscale(50%);

}
.greyscale-25 {
  -webkit-filter: grayscale(25%);
  filter: grayscale(25%);
}
.grey {
  color: palette(grey, base);
}
.light-grey {
  color: palette(grey, light);

}
.x-light-grey {
  color: palette(grey, x-light);

}
.xx-light-grey {
  color: palette(grey, xx-light);

}
.xxx-light-grey {
  color: palette(grey, xxx-light);
}

.dark-grey {
  color: palette(grey, dark);
}

.yellow {
  color: palette(yellow, base);

}
.x-light-yellow {
  color: palette(yellow, x-light);
}
.xx-light-yellow {
  color: palette(yellow, xx-light);
}

.orange {
  color: palette(orange, base);
}

.xxx-light-orange {
  color: palette(orange, xxx-light);
}

.blue {
  color: palette(blue, base);
}

.x-dark-blue {
  color: palette(blue, x-dark);
}

.white {
  color: $white;
}

.red {
  color: $red;
}

// SVG HELPERS

.fill-white {
  fill: $white;
}

.stroke-white {
  stroke: $white;
}

.fill-grey {
  fill: palette(grey, base);
}

.stroke-grey {
  stroke: palette(grey, base);
}

.fill-light-grey {
  fill: palette(grey, xxx-light);
}

.stroke-light-grey {
  stroke: palette(grey, xxx-light);
}

.fill-blue {
  fill: palette(blue, base);
}

.stroke-blue {
  stroke: palette(blue, base);
}

.fill-x-dark-blue {
  fill: palette(blue, x-dark);
}

.stroke-x-dark-blue {
  stroke: palette(blue, x-dark);
}

.bg-beige { background: #FAF9F8}

// BG YELLOW ////////////////////////
.fill-orange {
  fill: palette(orange, base);
}

.stroke-orange {
  stroke: palette(orange, base);
}

.fill-trans {
  fill: transparent;
}

.stroke-trans {
  stroke: transparent;
}

// BG HELPERS

.bg-white {
  background: $white;
}

// BG YELLOW

.bg-yellow {
  background: palette(yellow, base);
}
.bg-x-light-yellow {
  background: palette(yellow, x-light);
}
.bg-xx-light-yellow {
  background: palette(yellow, xx-light);
}

// BG GREY

.bg-grey {
  background: palette(grey, base);
}
.bg-light-grey {
  background: palette(grey, light);
}
.bg-x-light-grey {
  background: palette(grey, x-light);
}
.bg-xx-light-grey {
  background: palette(grey, xx-light);
}
.bg-xxx-light-grey {
  background: palette(grey, xxx-light);
}
.bg-xxxx-light-grey {
  background: palette(grey, xxxx-light);
}
.bg-dark-grey {
  background-color: palette(grey, x-dark);
}
.bg-xx-dark-grey {
  background-color: palette(grey, xx-dark);
}

//BG DARK CYAN

.bg-x-dark-blue {
  background: palette(blue, x-dark);
}
.bg-dark-blue {
  background: palette(blue, dark);
}
.bg-blue {
  background: palette(blue, base);
}
.bg-light-blue {
  background: palette(blue, light);
}
.bg-x-light-blue {
  background: palette(blue, x-light);
}
.bg-xx-light-blue {
  background: palette(blue, xx-light);
}
.bg-xxx-light-blue {
  background: palette(blue, xxx-light);
}
.bg-xxxx-light-blue {
  background: palette(blue, xxxx-light);
}
.bg-xxxxx-light-blue {
  background: palette(blue, xxxxx-light);
}

//BG ORANGE

.bg-orange {
  background: palette(orange, base);
}
.bg-light-orange {
  background: palette(orange, light);
}
.bg-x-light-orange {
  background: palette(orange, x-light);
}
.bg-xx-light-orange {
  background: palette(orange, xx-light);

}
.bg-xxx-light-orange {
  background: palette(orange, xxx-light);
}
.bg-xxxx-light-orange {
  background: palette(orange, xxxx-light);
}

//BG BISCUIT
.bg-biscuit {
  background: palette(beige, biscuit);
}
.bg-warm-biscuit {
  background: palette(beige, warm-biscuit);
}

.bg-facebook {
  background: #4c68a7;
  &:hover {
    background: #3e5f99 !important;
    color: $white;
  }
}

.bg-trans {
  background: transparent;
}

// RGBA HELPERS

.bg-white-10 {
  background: rgba($white, 0.1);
}

.bg-white-20 {
  background: rgba($white, 0.2);
}

.bg-white-30 {
  background: rgba($white, 0.3);
}

.bg-white-40 {
  background: rgba($white, 0.4);
}

.bg-white-50 {
  background: rgba($white, 0.5);
}

.bg-white-60 {
  background: rgba($white, 0.6);
}

.bg-white-70 {
  background: rgba($white, 0.7);
}

.bg-white-80 {
  background: rgba($white, 0.8);
}

.bg-white-90 {
  background: rgba($white, 0.9);
}

.bg-grey-10 {
  background: rgba(palette(grey, base), 0.1);
}

.bg-grey-20 {
  background: rgba(palette(grey, base), 0.2);
}

.bg-grey-30 {
  background: rgba(palette(grey, base), 0.3);
}

.bg-grey-40 {
  background: rgba(palette(grey, base), 0.4);
}

.bg-grey-50 {
  background: rgba(palette(grey, base), 0.5);
}

.bg-grey-60 {
  background: rgba(palette(grey, base), 0.6);
}

.bg-grey-70 {
  background: rgba(palette(grey, base), 0.7);
}

.bg-grey-80 {
  background: rgba(palette(grey, base), 0.8);
}

.bg-grey-90 {
  background: rgba(palette(grey, base), 0.9);
}

.bg-dark-grey-10 {
  background: rgba(palette(grey, x-dark), 0.1);
}

.bg-dark-grey-20 {
  background: rgba(palette(grey, x-dark), 0.2);
}

.bg-dark-grey-30 {
  background: rgba(palette(grey, x-dark), 0.3);
}

.bg-dark-grey-40 {
  background: rgba(palette(grey, x-dark), 0.4);
}

.bg-dark-grey-50 {
  background: rgba(palette(grey, x-dark), 0.5);
}

.bg-dark-grey-60 {
  background: rgba(palette(grey, x-dark), 0.6);
}

.bg-dark-grey-70 {
  background: rgba(palette(grey, x-dark), 0.7);
}

.bg-dark-grey-80 {
  background: rgba(palette(grey, x-dark), 0.8);
}

.bg-dark-grey-90 {
  background: rgba(palette(grey, x-dark), 0.9);
}

// SITE GRADIENTS

.site-gradient {
  @include gradient(
    135deg,
    palette(orange, xxx-light) 0%,
    palette(orange, xxxx-light) 49.86%,
    palette(blue, xxx-light) 100%
  );
}

.white-beige-gradient {
  @include gradient(-180deg, $white 0%, palette(orange, xxx-light) 100%);
}

.blue-beige-gradient {
  @include gradient(
    184deg,
    palette(orange, xxx-light) 0%,
    palette(blue, x-dark) 100%
  );
}

.orange-grey-gradient {
  @include gradient(
    184deg,
    palette(orange, x-light) 0%,
    palette(grey, xxxx-light) 50%
  );
}

// HOVER STATES
.white.hover-white:hover {
  color: palette(white, link-hover);

  path,
  polygon,
  rect {
    fill: palette(white, link-hover);
  }
}

button,
.c-btn,
.c-btn-site {
  &:hover.bg-hover-blue {
    background: palette(blue, base);
    color: $white;
  }

  &:hover.bg-hover-dark-blue {
    background: palette(blue, dark);
    color: $white;
  }

  &:hover.bg-hover-x-dark-blue {
    background: palette(blue, x-dark);
    color: $white;
  }

  &:hover.bg-hover-orange {
    background: palette(orange, base);
    color: $white;
  }

  &:hover.bg-hover-x-dark-orange {
    background: palette(orange, x-dark);
    color: $white;
  }

  &:hover.bg-hover-grey {
    background: palette(grey, base);
    color: $white;
  }

  &:hover.bg-hover-b-orange {
    border-color: palette(orange, base);
    color: grey;
  }

  &:hover.bg-hover-b-grey {
    border-color: palette(grey, base);
    color: grey;
  }

  &:hover.bg-hover-trans {
    background: transparent;
  }

  &:hover.hover-orange {
    color: palette(orange, base);
  }
}

.hover-blue {
  &:hover {
    color: palette(blue, base);
    fill: palette(blue, base);
  }
}

.focus-blue {
  &:focus {
    color: palette(blue, base);
  }
}

.hover-dark-blue {
  &:hover { color: palette(blue, dark); }
}

.hover-x-dark-blue {
  &:hover { color: palette(blue, x-dark); }
}

.hover-xx-dark-blue {
  &:hover { color: palette(blue, xx-dark); }
}

.hover-orange {
  &:hover { color: palette(orange, base); }
}

.hover-dark-orange {
  &:hover { color: palette(orange, dark); }
}

.hover-x-dark-orange {
  &:hover { color: palette(orange, x-dark); }
}

.hover-xx-dark-blue {
  &:hover { color: palette(orange, xx-dark); }
}
