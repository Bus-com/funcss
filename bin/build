#!/bin/sh
# this script assumes you are on macOS
# -e          : Stop on error
# -o pipefail : sets the exit code of a pipeline to that of the rightmost command to exit with a non-zero status

set -eo pipefail

DEBUG=true
DEPLOY=false
BUILD_TYPE="patch"
OUTPUT_STYLE="expanded"
OUTPUT_PATH="dist"
OUTPUT_NAME="funcss"
OUTPUT_FORMAT="css"
PUBLISH=true

function usage() {
    echo "\033[38;5;87mFUNCSS build Script\033[0m"
    echo ""
    echo "\033[0mbin/build"
    echo "\033[38;5;13m\t-h --help"
    echo "\033[38;5;166m\t--debug [default=true]"
    echo "\033[38;5;196m\t--deploy [default=false]"
    echo ""
}

# replace with the new name in the index file.
function replace_style_import() {
    sed -i .bak "s/.*<link rel='stylesheet' href='.*'>.*/<link rel='stylesheet' href='$OUTPUT_PATH\/$OUTPUT_NAME.$OUTPUT_FORMAT'>/g" index.html
    #not sure why; does not work without .bak syntax
    rm index.html.bak
}

while [ "$1" != "" ]; do
    PARAM=`echo $1 | awk -F= '{print $1}'`
    VALUE=`echo $1 | awk -F= '{print $2}'`
    case $PARAM in
        -h | --help)
            usage
            exit
            ;;
        --debug)
            DEBUG=true
            DEPLOY=false
            OUTPUT_STYLE="expanded"
            ;;
        --deploy)
            DEPLOY=true
            DEBUG=false
            BUILD_TYPE=$VALUE
            OUTPUT_STYLE="compressed"
            ;;
        --publish)
            PUBLISH=true
            ;;
        *)
            echo "ERROR: unknown parameter \"$PARAM\""
            usage
            exit 1
            ;;
    esac
    shift
done

printf "\033[95;5m              Feeling  \033[4mSassy\033[0m?         \033[0m\n"
printf "\033[106;30m            lib is being compiled           \033[0m\n"

if [ "$DEBUG" = true ]; then
    # replace with the new tagged name in the index file.
    replace_style_import
    # open the demo page
    printf "\033[166;5m             opening index.html          \033[0m\n"
    open index.html
    # Open a new terminal and launch sass --watch
    # open -a terminal -e $PWD ""
    sass --scss --watch scss/_all.scss:$OUTPUT_PATH/$OUTPUT_NAME.$OUTPUT_FORMAT --style $OUTPUT_STYLE
else
    sass --scss scss/_all.scss:$OUTPUT_PATH/funcss.$OUTPUT_FORMAT --style $OUTPUT_STYLE

    printf "\033[166;5m       minifying lib ($BUILD_TYPE)       \033[0m\n"
        
    MIN_OUTPUT_NAME="$OUTPUT_PATH/funcss.min.css"

    curl -X POST -s --data-urlencode "input@$OUTPUT_PATH/funcss.$OUTPUT_FORMAT" https://cssminifier.com/raw > $MIN_OUTPUT_NAME    

    OUTPUT_NAME=$MIN_OUTPUT_NAME
    replace_style_import

        
        #add folders, clean git
        git add bin/
        git add dist/
        git add scss/
        git add images/
        git add index.html
        git add README.md

        #commit
        read commitmessage
        say "enter your commit message: "
        git commit -m "$commitmessage"

        # update the version
        npm version $BUILD_TYPE
        printf "\033[106;30m        npm version $BUILD_TYPE done.         \033[0m\n"

    if [ "$PUBLISH" = true ]; then
        npm publish
    fi
fi

printf "\033[106;30m                                          \033[0m\n"
printf "\033[106;30m ▄▄▄▄· ▄• ▄▌.▄▄ ·     ▄▄·       • ▌ ▄ ·.  \033[0m\n"
printf "\033[106;30m ▐█ ▀█ █ ██▌▐█ ▀.    ▐█ ▌       ·██ ▐███▪ \033[0m\n"
printf "\033[106;30m ▐█▀▀█▄█▌▐█▌▄▀▀▀█▄   ██ ▄▄ ▄█▀▄ ▐█ ▌▐▌▐█· \033[0m\n"
printf "\033[106;30m ██▄▪▐█▐█▄█▌▐█▄▪▐█   ▐███▌▐█▌.▐▌██ ██▌▐█▌ \033[0m\n"
printf "\033[106;30m ·▀▀▀▀  ▀▀▀  ▀▀▀▀  ▀ ·▀▀▀  ▀█▄▀▪▀▀  █▪▀▀▀ \033[0m\n"
printf "\033[106;30m                                          \033[0m\n"
printf "\033[106;30m      $OUTPUT_NAME has been compiled      \033[0m\n"

