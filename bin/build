#!/bin/sh
# this script assumes you are on macOS
# -e          : Stop on error
# -o pipefail : sets the exit code of a pipeline to that of the rightmost command to exit with a non-zero status

set -eo pipefail

DEBUG=true
DEPLOY=false
BUILD_TYPE="patch"
OUTPUT_STYLE="expanded"
OUTPUT_PATH="dist"
OUTPUT_NAME="funcss"
OUTPUT_FORMAT="css"

function usage() {
    echo "\033[38;5;87mFUNCSS build Script\033[0m"
    echo ""
    echo "\033[0mbin/build"
    echo "\033[38;5;13m\t-h --help"
    echo "\033[38;5;166m\t--debug [default=true]"
    echo "\033[38;5;196m\t--deploy [default=false]"
    echo ""
}

while [ "$1" != "" ]; do
    PARAM=`echo $1 | awk -F= '{print $1}'`
    VALUE=`echo $1 | awk -F= '{print $2}'`
    case $PARAM in
        -h | --help)
            usage
            exit
            ;;
        --debug)
            DEBUG=true
            DEPLOY=false
            PUBLISH=false
            OUTPUT_STYLE="expanded"
            ;;
        *)
            echo "ERROR: unknown parameter \"$PARAM\""
            usage
            exit 1
            ;;
    esac
    shift
done

if [ "$DEPLOY" = true ]; then
    if [ -z "$BUILD_TYPE" ]; then
        echo "you need to specify the deploy type: [major | minor | patch | premajor | preminor | prepatch | prerelease]"
        exit 0;
    fi
fi

printf "\033[95;5m              Feeling  \033[4mSassy\033[0m?   \033[0m\n"
printf "\033[106;30m            lib is being compiled           \033[0m\n"
printf "\033[106;30m                copy images                 \033[0m\n"

cp -R images/ dist/images

# replace with the new tagged name in the index file.
#replace_style_import
# open the demo page
printf "\033[166;5m         opening index.html          \033[0m\n"
open index.html
# Open a new terminal and launch sass --watch
# open -a terminal -e $PWD ""
sass --watch scss/_all.scss:$OUTPUT_PATH/$OUTPUT_NAME.$OUTPUT_FORMAT --style $OUTPUT_STYLE

printf "\n"
printf "\033[106;30m                                            \033[0m\n"
printf "\033[106;30m ▄▄▄▄· ▄• ▄▌.▄▄ ·     ▄▄·       • ▌ ▄ ·.    \033[0m\n"
printf "\033[106;30m ▐█ ▀█ █ ██▌▐█ ▀.    ▐█ ▌       ·██ ▐███▪   \033[0m\n"
printf "\033[106;30m ▐█▀▀█▄█▌▐█▌▄▀▀▀█▄   ██ ▄▄ ▄█▀▄ ▐█ ▌▐▌▐█·   \033[0m\n"
printf "\033[106;30m ██▄▪▐█▐█▄█▌▐█▄▪▐█   ▐███▌▐█▌.▐▌██ ██▌▐█▌   \033[0m\n"
printf "\033[106;30m ·▀▀▀▀  ▀▀▀  ▀▀▀▀  ▀ ·▀▀▀  ▀█▄▀▪▀▀  █▪▀▀▀   \033[0m\n"
printf "\033[106;30m                                            \033[0m\n"
printf "\033[106;30m      $OUTPUT_NAME has been compiled              \033[0m\n"
